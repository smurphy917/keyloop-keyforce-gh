#Tue, 23 Aug 2022 06:39:28 +0000
dir.git=.git
dir.buildHooks=./build-hooks
dir.src=./src
dir.forceApp=./force-app
dir.destructiveChanges=./destructiveChanges
dir.manifest=./manifest
dir.resourceBundles=./resource-bundles
dir.scripts=${dir.toolingBase}/scripts
dir.antScripts=${dir.scripts}/ant
dir.mpdxScripts=${dir.scripts}/mpdx
dir.perlScripts=${dir.scripts}/perl
dir.apexScriptsPre=./apex-scripts-pre
dir.apexScriptsPost=./apex-scripts-post
dir.setupFiles=${dir.toolingBase}/setup-files
dir.localLibs=./ant-lib
dir.localMPPackages=./mp-packages
dir.certificates=./certificates
dir.temp=./temp
dir.tempRetrieveMain=${dir.temp}/retrieveMain
dir.tempDeployMain=${dir.temp}/deployMain
dir.logs=./logs
dir.sobeitConfig=./sobeit-config
dir.sobeitConfigExport=${dir.sobeitConfig}/export
dir.sobeitConfigImport=${dir.sobeitConfig}/import
dir.sobeitData=./sobeit-data
dir.plugins=./plugins

dir.md.sourceDir=${dir.src}

dir.sfdx.sourceDir=${dir.forceApp}

file.md.mainPackage=${dir.src}/package.xml
file.md.destructiveChangesPre=${dir.src}/destructiveChangesPre.xml
file.md.destructiveChangesPost=${dir.src}/destructiveChangesPost.xml
file.md.boilerplatePackage=${dir.src}/boilerplate.package.xml

file.sfdx.mainPackage=${dir.manifest}/package.xml
file.sfdx.destructiveChangesPre=${dir.destructiveChanges}/destructiveChangesPre.xml
file.sfdx.destructiveChangesPost=${dir.destructiveChanges}/destructiveChangesPost.xml
file.sfdx.boilerplatePackage=${dir.manifest}/boilerplate.package.xml

file.mainZip=./buildFile_main.zip
file.compressionConfig=./compression.json
file.modificationConfig=./modification.json
file.vlocityProperties=./vlocity.properties

file.exec.git=git
file.exec.openssl=openssl
file.exec.perl=perl
# file.exec.sfdx=sfdx
# file.exec.node=node
file.exec.vlocity=vlocity

file.git.hooks.commitMsg.src=${dir.scripts}/git-hook-templates/checkCommitMsg.sh
file.git.hooks.commitMsg.dst=${dir.git}/hooks/commit-msg

file.git.hooks.sendMetrics.src=${dir.scripts}/git-hook-templates/sendMetrics.sh

file.git.hooks.prePush.src=${dir.scripts}/git-hook-templates/checkBranchName.sh
file.git.hooks.prePush.dst=${dir.git}/hooks/pre-push

git.hooks.commitMsg.enable=true
git.hooks.commitMsg.ticketRegex=(((^|,|\:|\\s+|/|-|\\()[KEY]-[0-9]+(\\)|/|-|,|\:|\\s+|$))|\#noticket)
git.hooks.commitMsg.projectKey=[A-Z][A-Z0-9]{1,10}
git.hooks.commitMsg.error=Aborting commit. Your commit message is missing a Jira ticket ('ABC-1')\!

git.hooks.prePush.enable=true
git.hooks.prePush.branchRegex=^(feature/(.*)|release/(.*)|bugfix/(.*)|hotfix/(.*)|deploy/(.*)|environment/(.*)|develop|master|build/(.*))$
git.hooks.prePush.error=*******************************************************\n$local_branch is not a valid branch name\!\n\nPlease rename your banch and try again.\n\nValid branch names\:\nFeature          - feature/ABC-1-a-couple-of-keywords\nBugfix           - bugfix/ABC-1-a-couple-of-keywords\nHotfix           - hotfix/ABC-1-a-couple-of-keywords\nRelease          - release/n.n.n\nDeploy           - deploy/ENV\nEnvironment      - environment/ENV\nBuild Management - build/productionRetrieve, build/apiUpgrade, build/toolingUpgrade\n*******************************************************
listener.enable=true

tooling.librariesMode=remote
tooling.enableSfdxDefaultUsername=true

# Never disable tooling.disableSignatureVerification
# Deprecation notice: This property will be removed from the next version

hooks.showHookPoints=false



sf.version=55.0
ff.version=1.3.0
antcontrib.version=1.0b3
node.version=16.16.0

configureCI.bitbucketIntegrationDisabled=false
configureCI.permissionSetLabel=DevOps - SFDX Build Connected App Access
configureCI.permissionSetName=DevOps_SFDX_Build_Connected_App_Access
configureCI.connectedAppLabel=DevOps - SFDX Build
configureCI.connectedAppName=DevOps_SFDX_Build
configureCI.connectedAppEmail=noreply@makepositive.com
configureCI.userProfile=System Administrator
configureCI.userFirstName=DevOps
configureCI.userLastName=User
configureCI.userAlias=DevOps
configureCI.userNickname=DevOps.User
configureCI.userTimeZone=GMT
configureCI.userLocale=en_GB
configureCI.userEmailEncoding=UTF-8
configureCI.userLangLocale=en_US

deploy.enableApexScriptsPre=true
deploy.enableApexScriptsPost=true
deploy.enableMetadataModifications=true

deploy.enableSaveBuildState=true
deploy.maxPoll=500
deploy.mainIgnoreWarnings=false
deploy.pollWaitMillis=5000
deploy.enableDataImport=true
deploy.useLegacyCommand=false

# Undocumented beta feature - Improve handling of the deployment of new profiles
#
# If a profile doesn't exist in a target environment it is cloned from a standard
# profile on deployment - this can result in the new profile having more access
# than intended. Best practice is to manually clone any new profiles from a profile
# with no access before deployment.
#
# This feature will check for profiles included in the deployment that don't exist
# in the target org. It can be configured to present a warning or stop the build with
# an error.
#
# Valid values:
# - disabled  : off, no profile check
# - warn      : display warning but don't stop the build
# - error     : display warning and stop the build
deploy.missingProfileChecker=warn

retrieve.enableMain=true
retrieve.enableMetadataCompressions=true
retrieve.enableMetadataModifications=true
retrieve.maxPoll=200
retrieve.pollWaitMillis=10000
retrieve.enableDataExport=true
retrieve.useLegacyCommand=false

convert.useLegacyCommand=false

resources.enableResourceBundles=true
resources.unpack.removeStaticResource=true
resources.unpack.resetResourceBundlesDirectory=true

scripts.enableParseLogs=true

mpdx.enableBase64Args=true

util.autoDeleteBakFiles=true

temp.autoClean.enabled=true

package.tagCheckInterval=14400

execCheck.git.disabled=false
execCheck.node.disabled=false
execCheck.openssl.disabled=false
execCheck.sfdx.disabled=false
execCheck.vlocity.disabled=false

# This debug flag will enable enhanced exception information within MPDX (plugins and Sobeit)
arg.node.mpdx.debug=false

### Configurable Environment Properties

### Input - core_exampleSimple=var
### Output - environment.core.exampleSimple=var
# environment.core.exampleSimple=default-simple-value

### Input - core_exampleComplex=var
### Output - environment.core.exampleComplex=var, exampleCoreComplexAlias=var
# environment.core.exampleComplex.required=false
# environment.core.exampleComplex.type=string|boolean|integer|float
# environment.core.exampleComplex.default=default-complex-value
# environment.core.exampleComplex.alias=exampleCoreComplexAlias
# environment.core.exampleComplex.nodeArg=mpdx.plugin.myPlugin.exampleComplex

### Input - project_exampleSimple=var
### Output - environment.project.exampleSimple=var
# environment.project.exampleSimple=default-simple-value

### Input - project_exampleComplex=var
### Output - environment.project.exampleComplex=var, exampleProjectComplexAlias=var
# environment.project.exampleComplex.required=false
# environment.project.exampleComplex.type=string|boolean|integer|float
# environment.project.exampleComplex.default=default-complex-value
# environment.project.exampleComplex.alias=exampleProjectComplexAlias
# environment.project.exampleComplex.nodeArg=mpdx.sobeit.exampleComplex


### Example Node Arguments

### Node Level Property - passed to all node calls as --propertyA node-level
# arg.node.propertyA=node-level

### MPDX Level Property - passed to all mpdx calls as --propertyB mpdx-level
# arg.node.mpdx.propertyB=mpdx-level

### SOBEIT Level Property - passed to all sobeit calls as --arg-propertyC sobeit-level
# arg.node.mpdx.sobeit.propertyC=sobeit-level

### Plugin Level Property - passed to all plugin calls as --arg-propertyD plugin-level
# arg.node.mpdx.plugin.propertyD=plugin-level

### Specified Plugin Level Property - passed to specified plugin call as --arg-propertyE specified-plugin-level (name of plugin = specified)
# arg.node.mpdx.plugin.specified.propertyE=specified-plugin-level

### Modifications Engine Property - passed to the modifications engine into modify and delete operations as runtimeConfig propertyF = my-modifications-arg
# arg.node.mpdx.script.applyModifications.propertyF=my-modifications-arg


### Configurable Plugin hooks

# hook.{hook-name}.{order}.plugin={plugin-name}
# hook.{hook-name}.{order}.includeSession={true|false Default:true}
# hook.{hook-name}.{order}.enabledProperty={property-name If not set defaults to enabled}
# hook.{hook-name}.{order}.args.{arg-name-1}={arg-value-1}
# hook.{hook-name}.{order}.args.{arg-name-2}={arg-value-2}
# hook.{hook-name}.{order}.args.{arg-name-n}={arg-value-n}

### Example - The 'myPreDeployPlugin' and 'myGeneralPlugin' will run at the hook-pre-deploy-steps-pre hook point.
### - 'myPreDeployPlugin' will run first with a session id and no arguments
### - 'myGeneralPlugin' will run second without a session id and two arguments:
###      Argument 'type' with value 'deploy'
###      Argument 'favouriteTeletubby' with value 'Tinky Winky'
###   ** Only if the environment.project.myGeneralPluginEnabled evaluates to true **
# hook.hook-pre-deploy-steps-pre.0.plugin=myPreDeployPlugin
# hook.hook-pre-deploy-steps-pre.1.plugin=myGeneralPlugin
# hook.hook-pre-deploy-steps-pre.1.enabledProperty=environment.project.myGeneralPluginEnabled
# hook.hook-pre-deploy-steps-pre.1.includeSession=false
# hook.hook-pre-deploy-steps-pre.1.args.type=deploy
# hook.hook-pre-deploy-steps-pre.1.args.favouriteTeletubby=Tinky Winky


######################################################################################################
# DEPRECATED - these properties are deprecated, modify compression.json / modification.json instead.
# (They only remain here for backwards compatibility)
deploy.enableRemovePackageMembers=true

retrieve.enableCompressProfiles=true
retrieve.enableCompressPageLayouts=true
retrieve.enableCompressGlobalValueSets=true
retrieve.enableCompressStandardValueSets=true
retrieve.enableCompressObjectPicklists=true
retrieve.enableCompressQuickActions=true
retrieve.enableCompressCustomMetaData=true
retrieve.enableCompressQueues=true

retrieve.enableRemoveFalseEntriesFromPermissionSets=true
retrieve.enableRemoveFieldHistoryTracking=true
retrieve.enableRemoveLayoutAssignments=true
retrieve.enableRemoveListViews=true
retrieve.enableRemoveLoginIPRangesFromProfiles=false
retrieve.enableRemoveStandardApps=true
retrieve.enableRemoveUserPermissions=true

metadata.removeFieldHistoryTrackingObjects=*
metadata.removeLayoutAssignments=SocialPost-Social Post Layout
metadata.removeUserPermissions=CanAccessCE,ChangeDashboardColors,EditBillingInfo,ManageRealm,ManageSandboxes,SendExternalEmailAvailable,SubscribeToLightningDashboards
metadata.removeStandardAppsRegex=Lead_Generation|Relationship_Management|Sales_Leadership|Sales_Operations|standard__([a-zA-Z0-9])+.app
metadata.removePackageMembersRegex=(standard-([A-Za-z0-9]+)|standard__([A-Za-z0-9]+)|smagicinteract__([A-Za-z0-9]+)|Lead_Generation|Relationship_Management|Sales_Leadership|Sales_Operations|PushTopic)
metadata.removeListViewFiles=Location/listViews/All_Locations,Location/listViews/My_Locations,WorkType/listViews/All_WorkTypes,WorkType/listViews/My_WorkTypes,WorkOrder/listViews/All_WorkOrders,WorkOrder/listViews/My_WorkOrders,ServiceAppointment/listViews/All_ServiceAppointments,ServiceAppointment/listViews/My_ServiceAppointments,ServiceResource/listViews/All_ServiceResources,ServiceResource/listViews/My_ServiceResources,ServiceTerritory/listViews/All_ServiceTerritories,ServiceTerritory/listViews/My_ServiceTerritories
######################################################################################################
